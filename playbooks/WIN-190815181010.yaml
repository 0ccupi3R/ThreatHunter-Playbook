title: Remote Service creation
id: WIN-190815181010
collaborators:
  - Roberto Rodriguez @Cyb3rWard0g
  - Jose Rodriguez @Cyb3rPandaH
playbooks_related:
  - WIN-190813181020
creation_date: 2019/08/15
modification_date: 2020/09/20
platform: Windows
attack_mappings:
  - tactics:
      - TA0002
      - TA0008
    technique: T1569
    sub_technique: "002"
hypothesis: Adversaries might be creating new services remotely to execute code and move laterally in my environment
technical_context: 
offensive_tradecraft: |-
    Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager. This can be done by by adversaries creating a new service.
    Adversaries can create services remotely to execute code and move lateraly across the environment.
validation:
    permissions_required:
      - Administrator
    simulation:
    commnads:
      - None
    script_url:
      - None
    test_data:
        document: https://mordordatasets.com/notebooks/small/windows/08_lateral_movement/SDWIN-190518210652.html
        datasets:
            - https://raw.githubusercontent.com/OTRF/mordor/master/datasets/small/windows/lateral_movement/empire_invoke_psexec.zip
analytics:
    - name: Analytic I
      description: Look for new services being created in your environment under a network logon session (3). That is a sign that the service creation was performed from another endpoint in the environment
      data_sources:
        - attack_mapping: Service
            - event_provider: Microsoft-Windows-Security-Auditing
              data_model:
                - relationship: User created Service
                  id: BB243122-F345-4ED6-97A7-FBA2A1AF7C38
                  event_id: 4697
        - attack_mapping: Authentication log
            - event_provider: Microsoft-Windows-Security-Auditing
              data_model:
                - relationship: User authenticated Host
                  id: C07F53CF-A125-40F8-BE5C-E42017A57C0F
                  event_id: 4624
      logic: |-
        SELECT o.`@timestamp`, o.computer_name, o.SubjectUserName, o.SubjectUserName, o.ServiceName, a.IpAddress
        FROM mordorTable o
        INNER JOIN (
            SELECT computer_name,TargetUserName,TargetLogonId,IpAddress
            FROM mordorTable
            WHERE channel = "Security"
                AND event_id = 4624
                AND LogonType = 3
                AND IpAddress is not null
                AND NOT TargetUserName LIKE "%$"
            ) a
        ON o.SubjectLogonId = a.TargetLogonId
        WHERE o.channel = "Security"
            AND o.event_id = 4697
research_notes:
additional_notes: |-
    * If there are a lot of unique services being created in your environment, try to categorize the data based on the bussiness unit.
    * Identify the source of unique services being created everyday. I have seen Microsoft applications doing this.
    * Stack the values of the service file name associated with the new service.
    * Document what users create new services across your environment on a daily basis
research_output:
references: |-
    * https://www.powershellempire.com/?page_id=523
